<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>maps on INBO Tutorials</title>
    <link>https://inbo.github.io/tutorials/tags/maps/</link>
    <description>Recent content in maps on INBO Tutorials</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://inbo.github.io/tutorials/tags/maps/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using WFS service in R</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_wfs_services/</link>
      <pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_wfs_services/</guid>
      <description>What is WFS? In computing, the Open Geospatial Consortium (OGC) Web Feature Service (WFS) Interface Standard provides an interface allowing requests for geographical features across the web using platform-independent calls. One can think of geographical features as the “source code” behind a map, whereas the Web Mapping Service (WMS) interface or online tiled mapping portals like Google Maps return only an image, which end-users cannot edit or spatially analyze.
The standard output format for reading or downloading data from a WFS is the XML-based Geography Markup Language (GML), but other formats like shapefiles or geojson are also available.</description>
    </item>
    
    <item>
      <title>How to make spatial joins (point in polygon)?</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_point_in_polygon/</link>
      <pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_point_in_polygon/</guid>
      <description>library(R.utils) library(rgdal) library(tidyverse) library(leaflet) library(sp) library(sf) library(rgbif) library(DBI) What we want to do In this short tutorial, we explore various options to deal with the situation where we have (1) a spatially referenced GIS file with polygons and (2) a spatially referenced set of points that overlaps with the GIS polygons.
Typically, both data sources contain information (apart from the spatial locations) that needs to be related to each other in some way.</description>
    </item>
    
    <item>
      <title>Let&#39;s create an interactive map!</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_create_leaflet_map/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_create_leaflet_map/</guid>
      <description>Introduction The required packages are leaflet and sp.
library(leaflet) library(sp) Dummy data Let&#39;s create a dumy data.frame to play around, i.e. the three locations of INBO:
names &amp;lt;- c(&amp;#34;VAC HT&amp;#34;,&amp;#34;Geraardsbergen&amp;#34;,&amp;#34;Linkebeek&amp;#34;) lat &amp;lt;- c(50.865664, 50.760201, 50.767950) lon &amp;lt;- c(4.349944, 3.874300, 4.333044) data &amp;lt;- data.frame(names,lat,lon) We created three points:
plot(data$lon, data$lat) Creating a map We need to convert the data.frame to a SpatialPointsDataFrame:
crs_wgs84 &amp;lt;- CRS(&amp;#34;+init=epsg:4326&amp;#34;) pts &amp;lt;- SpatialPointsDataFrame(data[c(&amp;#34;lon&amp;#34;,&amp;#34;lat&amp;#34;)], data[!(names(data) %in% c(&amp;#34;lon&amp;#34;,&amp;#34;lat&amp;#34;))], proj4string = crs_wgs84) The leaflet package is ideal to create a basic interactive map:</description>
    </item>
    
    <item>
      <title>Transforming spatial objects</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_transform_crs/</link>
      <pubDate>Mon, 19 Feb 2018 14:52:22 +0100</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_transform_crs/</guid>
      <description>Sometimes we have a layer in one coordinate reference system (CRS) and need to transform it into another coordinate reference system. The first thing we need to do is identifying both coordinate reference systems. Let&#39;s create an example and identify the coordinate reference system with proj4string(). We used the coordinates posted on the contact page of NGI.
library(sp) library(leaflet) library(widgetframe) ## Loading required package: htmlwidgets  ngi &amp;lt;- data.frame(x = 650381.</description>
    </item>
    
    <item>
      <title>Using WMS service in R</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_wms_services/</link>
      <pubDate>Mon, 19 Feb 2018 12:09:22 +0100</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_wms_services/</guid>
      <description>WMS stands for Web Map Service. The service provides prerendered tiles at different scales. This makes it useful to include them as background images in maps.
wms_grb links to the WMS of the GRB-basiskaart, the Flemish cadastral map. It depicts land parcels, buildings, watercourses, roads and railroads.
wms_ortho contains a mosaic of recent orthophotos made during the winter. The layer Ortho contains the images, the layer Vliegdagcontour detail on the time when the pictures were taken.</description>
    </item>
    
  </channel>
</rss>