<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>r on INBO Tutorials</title>
    <link>https://inbo.github.io/tutorials/categories/r/</link>
    <description>Recent content in r on INBO Tutorials</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://inbo.github.io/tutorials/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Software by INBO: packages for environmentalists and ecologists!</title>
      <link>https://inbo.github.io/tutorials/articles/inbo_software/</link>
      <pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/articles/inbo_software/</guid>
      <description>At the Research Institute for Nature and Forest (INBO), we are eager to sustain, promote and develop open-source software that is relevant to biodiversity researchers! This page lists R and Python packages which INBO developed or made a significant contribution to. Several of these packages continue being developed.
Please, feel invited to try out packages! If you encounter a problem or if you have a suggestion, we encourage you to post an issue on the package’s code repository.</description>
    </item>
    
    <item>
      <title>How to use open raster file formats in R: GeoTIFF &amp; GeoPackage</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_standards_raster/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_standards_raster/</guid>
      <description>This tutorial uses a few basic functions from the dplyr and raster packages. While only a few functions are used, you can use the previous hyperlinks to access the tutorials (vignettes) of these packages for more functions and information.
options(stringsAsFactors = FALSE) library(raster) library(tidyverse) library(inborutils) You will find a bit more background about ‘why and what’, regarding the considered open standards, in a separate post on this website.
In short, the GeoTIFF and GeoPackage formats are ideal for exchange, publication, interoperability &amp;amp; durability and to open science in general.</description>
    </item>
    
    <item>
      <title>How to use open vector file formats in R: GeoPackage &amp; GeoJSON</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_standards_vector/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_standards_vector/</guid>
      <description>This tutorial uses a few basic functions from the dplyr and sf packages. While only a few functions are used, you can use the previous hyperlinks to access the tutorials (vignettes) of these packages for more functions and information.
options(stringsAsFactors = FALSE) library(tidyverse) library(sf) library(inborutils) You will find a bit more background about ‘why and what’, regarding the considered open standards, in a separate post on this website.
In short, the GeoPackage and GeoJSON formats are ideal for exchange, publication, interoperability &amp;amp; durability and to open science in general.</description>
    </item>
    
    <item>
      <title>Meet some popular open geospatial standards!</title>
      <link>https://inbo.github.io/tutorials/articles/geospatial_standards/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/articles/geospatial_standards/</guid>
      <description>Some inspiration for this post came from the beautiful books of Lovelace et al. (2020), Pebesma &amp;amp; Bivand (2019) and Hijmans (2019), and from various websites.
Why use open standards?  Open file standards ease collaboration, portability and compatibility between users, machines and applications. Their (file) structure is fully documented.  Consequently, scientists and programmers can build new software / packages and make innovations that use these standards, while maintaining interoperability with existing applications.</description>
    </item>
    
    <item>
      <title>Classification and visualisation of estimates and their uncertainty</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_effectclass/</link>
      <pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_effectclass/</guid>
      <description>Here are the slides of a presentation about the effectclass package.</description>
    </item>
    
    <item>
      <title>Match scientific names with the GBIF Backbone Taxonomy</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_gbif_name_matching/</link>
      <pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_gbif_name_matching/</guid>
      <description>Introduction This tutorial will explain how you can match a list of scientific names against the GBIF backbone taxonomy.
It is important that you have the most recent version of inborutils installed and available:
remotes::install_github(&amp;#34;inbo/inborutils&amp;#34;) # install inborutils library(tidyverse) # To do datascience library(rgbif) # To lookup names in the GBIF backbone taxonomy library(inborutils) # To wrap GBIF API data library(knitr) Read data file containing the scientific names Read file containing the scientific names you want to check against the GBIF taxonomic backbone:</description>
    </item>
    
    <item>
      <title>How to make spatial joins (point in polygon)?</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_point_in_polygon/</link>
      <pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_point_in_polygon/</guid>
      <description>library(R.utils) library(rgdal) library(tidyverse) library(leaflet) library(sp) library(sf) library(rgbif) library(DBI) What we want to do In this short tutorial, we explore various options to deal with the situation where we have (1) a spatially referenced GIS file with polygons and (2) a spatially referenced set of points that overlaps with the GIS polygons.
Typically, both data sources contain information (apart from the spatial locations) that needs to be related to each other in some way.</description>
    </item>
    
    <item>
      <title>Applying the INBO corporate identity to bookdown documents</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_inbomd/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_inbomd/</guid>
      <description>During this workshop you learn how to turn a regular Rmarkdown file into a bookdown document using the INBO corporate identity. A lot of tips and trics use plain bookdown. So you can use them with other bookdown output formats.
The slides are available on the INBOmd examples website.
The source code is avalaible in the INBOmd example GitHub repository.</description>
    </item>
    
    <item>
      <title>R voor beginners</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_beginners/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_beginners/</guid>
      <description>Doel van de cursus Hoe maak je van je ingezamelde gegevens een reproduceerbare analyse, visualisatie en rapportage, gebruik makend van de software R en Rstudio.
 Rstudio kunnen gebruiken (Les 1a) Commando&#39;s uitvoeren vanuit een script (Les 1b) Externe databestanden inlezen in R (Les 2a) Gegevens visualiseren (ggplot2) (Les 2b) Data manipuleren in een gewenste vorm (dplyr) (Les 3) Reproduceerbaar analyserapport maken (Rmarkdown) + algemene vragen (Les 4)  Bovenstaande topics worden gecombineerd in een opleiding van 4 workshops.</description>
    </item>
    
    <item>
      <title>INLA workshops</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_inla/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_inla/</guid>
      <description>These workshops are a follow-up of the course on &amp;ldquo;Spatial, temporal and spatial-temporal models using R-INLA&amp;rdquo; by Alain Zuur and Elena Ieno (Highland Statistics Ltd.). The main goal is the get people using R-INLA with their own data in a workshop setting so they can tap into the knowledge of others. The workshops are not a copy of the Highstat course but elaborate certain topics. We also introduce the inlatools and inlabru.</description>
    </item>
    
    <item>
      <title>Headers and navigation in R code</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_script_sections/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_script_sections/</guid>
      <description>Introduction R code can become elaborate and consequently unclear or difficult to navigate. Yet, it is possible to introduce headers and navigate through them.
Creating sections manually To create a header of a section, different methods can be applied. Any comment line which includes at least four trailing dashes (-), equal signs (=), or hash tags (#) automatically creates a code section.
# 1. Header 1 #### # 2. Header 2 ---- # 3.</description>
    </item>
    
    <item>
      <title>Let&#39;s create an interactive map!</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_create_leaflet_map/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_create_leaflet_map/</guid>
      <description>Introduction The required packages are leaflet and sp.
library(leaflet) library(sp) Dummy data Let&#39;s create a dumy data.frame to play around, i.e. the three locations of INBO:
names &amp;lt;- c(&amp;#34;VAC HT&amp;#34;,&amp;#34;Geraardsbergen&amp;#34;,&amp;#34;Linkebeek&amp;#34;) lat &amp;lt;- c(50.865664, 50.760201, 50.767950) lon &amp;lt;- c(4.349944, 3.874300, 4.333044) data &amp;lt;- data.frame(names,lat,lon) We created three points:
plot(data$lon, data$lat) Creating a map We need to convert the data.frame to a SpatialPointsDataFrame:
crs_wgs84 &amp;lt;- CRS(&amp;#34;+init=epsg:4326&amp;#34;) pts &amp;lt;- SpatialPointsDataFrame(data[c(&amp;#34;lon&amp;#34;,&amp;#34;lat&amp;#34;)], data[!(names(data) %in% c(&amp;#34;lon&amp;#34;,&amp;#34;lat&amp;#34;))], proj4string = crs_wgs84) The leaflet package is ideal to create a basic interactive map:</description>
    </item>
    
    <item>
      <title>Using `%&gt;%` pipes in R</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_tidyverse_piping/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_tidyverse_piping/</guid>
      <description>library(dplyr) How to use piping in R Normally, you would do this:
head(mtcars) ## mpg cyl disp hp drat wt qsec vs am gear carb ## Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 ## Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 ## Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 ## Hornet 4 Drive 21.</description>
    </item>
    
    <item>
      <title>Using WFS service in R</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_wfs_services/</link>
      <pubDate>Wed, 07 Mar 2018 16:50:01 +0100</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_wfs_services/</guid>
      <description>What is WFS? In computing, the Open Geospatial Consortium Web Feature Service (WFS) Interface Standard provides an interface allowing requests for geographical features across the web using platform-independent calls. One can think of geographical features as the &amp;ldquo;source code&amp;rdquo; behind a map, whereas the WMS interface or online tiled mapping portals like Google Maps return only an image, which end-users cannot edit or spatially analyze. The XML-based GML furnishes the default payload-encoding for transporting geographic features, but other formats like shapefiles can also serve for transport.</description>
    </item>
    
    <item>
      <title>Transforming spatial objects</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_transform_crs/</link>
      <pubDate>Mon, 19 Feb 2018 14:52:22 +0100</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_transform_crs/</guid>
      <description>Sometimes we have a layer in one coordinate reference system (CRS) and need to transform it into another coordinate reference system. The first thing we need to do is identifying both coordinate reference systems. Let&#39;s create an example and identify the coordinate reference system with proj4string(). We used the coordinates posted on the contact page of NGI.
library(sp) library(leaflet) library(widgetframe) ## Loading required package: htmlwidgets  ngi &amp;lt;- data.frame(x = 650381.</description>
    </item>
    
    <item>
      <title>Using WMS service in R</title>
      <link>https://inbo.github.io/tutorials/tutorials/spatial_wms_services/</link>
      <pubDate>Mon, 19 Feb 2018 12:09:22 +0100</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/spatial_wms_services/</guid>
      <description>WMS stands for Web Map Service. The service provides prerendered tiles at different scales. This makes it useful to include them as background images in maps.
wms_grb links to the WMS of the GRB-basiskaart, the Flemish cadastral map. It depicts land parcels, buildings, watercourses, roads and railroads.
wms_ortho contains a mosaic of recent orthophotos made during the winter. The layer Ortho contains the images, the layer Vliegdagcontour detail on the time when the pictures were taken.</description>
    </item>
    
    <item>
      <title>Data wrangling with tidyverse</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_tidyverse_info/</link>
      <pubDate>Fri, 09 Feb 2018 14:14:49 +0100</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_tidyverse_info/</guid>
      <description>Real life datasources seldom provide data in exactly the format you need for the analysis. Hence most of the time you need to manipulate the data after reading it into R. There are several ways to do this, each with their pros and cons. We highly recommend the tidyverse collection of packages. The command library(tidyverse) will actually load the following packages: ggplot2, dplyr, tidyr, readr, purrr, tibble, stringr and forecats.</description>
    </item>
    
    <item>
      <title>Reading large data files in R</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_large_data_files_handling/</link>
      <pubDate>Fri, 10 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_large_data_files_handling/</guid>
      <description>Intro R is known to have difficulties handling large data files. Here we will explore some tips that make working with such files in R less painfull.
tl;dr  If you can comfortably work with the entire file in memory, but reading the file is rather slow, consider using the data.table package and read the file with its fread function. If your file does not comfortably fit in memory:  Use sqldf if you have to stick to csv files.</description>
    </item>
    
    <item>
      <title>Read data from INBO databases (SQL Server) with R</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_database_access/</link>
      <pubDate>Fri, 03 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_database_access/</guid>
      <description>Connection to INBO database Here we provide the approach using the package DBI, which is also used by RStudio.[1]. This package enables the link between R and the (remote) database. After installation of the needed packages (install.packages(c(&amp;quot;DBI&amp;quot;, &amp;quot;glue&amp;quot;, &amp;quot;tidyverse&amp;quot;))), the packages can be loaded:
library(DBI) library(glue) library(tidyverse) To create a database connection, different approaches are available as explained in the next section:
 Use the dedicated connect_inbo_dbase function in the inborutils package Setup the required parameters yourself Reuse existing registered connections on your computer  Inborutils function To support the connection to INBO databases, a dedicated function is available in the inborutils package, called connect_inbo_dbase.</description>
    </item>
    
    <item>
      <title>Read data from google sheet</title>
      <link>https://inbo.github.io/tutorials/tutorials/r_google_sheets/</link>
      <pubDate>Tue, 03 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://inbo.github.io/tutorials/tutorials/r_google_sheets/</guid>
      <description>library(googlesheets) library(dplyr) library(ggplot2) Setup The R package googlesheets provides the functionality to retrieve data from a google sheet. Once the registration as a user is done and the permissions are granted, it enables to read and write to google sheets. Initiation of the authentification can be done with the gs_auth command.
gs_auth() Google will ask to grant the package the permission to access your drive. This token is saved to in a file .</description>
    </item>
    
  </channel>
</rss>